#!/bin/bash

# Script pour mettre √† jour le fichier .env avec les URLs ngrok actuelles
echo "üîÑ Mise √† jour du fichier .env avec les URLs ngrok..."

ENV_FILE="front/.env"

# V√©rifier que ngrok est en cours d'ex√©cution
if ! curl -s http://localhost:4040/api/tunnels > /dev/null 2>&1; then
    echo "‚ùå Ngrok ne semble pas √™tre en cours d'ex√©cution"
    echo "üí° Lancez d'abord: ./start-ngrok.sh"
    exit 1
fi

# R√©cup√©rer les URLs depuis l'API ngrok
TUNNELS_JSON=$(curl -s http://localhost:4040/api/tunnels)

# Extraire les URLs pour chaque port
URL_3000=$(echo $TUNNELS_JSON | jq -r '.tunnels[] | select(.config.addr | contains("3000")) | .public_url')
URL_3001=$(echo $TUNNELS_JSON | jq -r '.tunnels[] | select(.config.addr | contains("3001")) | .public_url')

if [ "$URL_3000" = "null" ] || [ "$URL_3001" = "null" ]; then
    echo "‚ùå Impossible de r√©cup√©rer les URLs ngrok"
    exit 1
fi

echo "üåê URLs d√©tect√©es:"
echo "  Port 3000 (AI Interface): $URL_3000"
echo "  Port 3001 (AI Bricks Analyst): $URL_3001"

# Sauvegarder l'ancien .env
cp $ENV_FILE "${ENV_FILE}.backup"

# Mettre √† jour le fichier .env
sed -i.tmp "s|VITE_AI_INTERFACE_ACTION_URL=.*|VITE_AI_INTERFACE_ACTION_URL=$URL_3000|" $ENV_FILE
sed -i.tmp "s|VITE_AI_BRICKS_ANALYST_URL=.*|VITE_AI_BRICKS_ANALYST_URL=$URL_3001|" $ENV_FILE

# Nettoyer le fichier temporaire
rm "${ENV_FILE}.tmp"

echo "‚úÖ Fichier .env mis √† jour !"
echo "üìã Nouveau contenu:"
cat $ENV_FILE

echo ""
echo "üíæ Sauvegarde cr√©√©e: ${ENV_FILE}.backup" 