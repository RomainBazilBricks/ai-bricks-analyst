import { db } from '../db/index';
import { analysis_steps } from '../db/schema';
import { eq } from 'drizzle-orm';

/**
 * Script de migration pour mettre √† jour les prompts existants avec les instructions JSON
 */
export const updateExistingPrompts = async (): Promise<void> => {
  try {
    console.log('üîÑ D√©but de la mise √† jour des prompts existants...');

    // Prompt 1: Analyse globale
    await db
      .update(analysis_steps)
      .set({
        prompt: `R√©alisez une analyse d√©taill√©e et structur√©e du projet d'investissement. Incluez : 1) Analyse financi√®re (rentabilit√©, cash-flow, ROI), 2) Analyse du march√© local, 3) √âvaluation des risques, 4) Points forts et faiblesses, 5) Recommandations strat√©giques. Soyez pr√©cis et utilisez les donn√©es des documents fournis.

IMPORTANT: Retournez votre analyse sous forme JSON structur√© via POST sur l'endpoint /api/workflow/analysis-macro/{projectUniqueId} avec le format suivant :

{
  "projectUniqueId": "{projectUniqueId}",
  "macroAnalysis": {
    "overallRisk": "low|medium|high",
    "marketPotential": "low|medium|high",
    "technicalFeasibility": "low|medium|high",
    "financialViability": "low|medium|high",
    "competitiveAdvantage": "low|medium|high",
    "summary": "R√©sum√© de votre analyse globale",
    "keyStrengths": ["Point fort 1", "Point fort 2", ...],
    "keyWeaknesses": ["Point faible 1", "Point faible 2", ...],
    "recommendedActions": ["Action recommand√©e 1", "Action recommand√©e 2", ...]
  }
}`
      })
      .where(eq(analysis_steps.name, 'Analyse globale'));

    console.log('‚úÖ Prompt "Analyse globale" mis √† jour');

    // Prompt 2: Vue d'ensemble du projet
    await db
      .update(analysis_steps)
      .set({
        prompt: `Analysez les documents fournis et r√©digez une vue d'ensemble concise du projet d'investissement immobilier en 3-5 lignes maximum. Focalisez-vous sur les √©l√©ments cl√©s : type de bien, localisation, objectif d'investissement et rentabilit√© attendue.

IMPORTANT: D√©veloppez maintenant cette analyse en sections d√©taill√©es via POST sur l'endpoint /api/workflow/analysis-description/{projectUniqueId} avec le format suivant :

{
  "projectUniqueId": "{projectUniqueId}",
  "detailedAnalysis": {
    "businessModel": {
      "description": "Description d√©taill√©e du mod√®le √©conomique",
      "revenueStreams": ["Source de revenus 1", "Source de revenus 2"],
      "keyPartners": ["Partenaire cl√© 1", "Partenaire cl√© 2"],
      "valueProposition": "Proposition de valeur principale"
    },
    "marketAnalysis": {
      "targetMarket": "Description du march√© cible",
      "marketSize": "Taille et caract√©ristiques du march√©",
      "competitorAnalysis": "Analyse concurrentielle",
      "marketTrends": ["Tendance 1", "Tendance 2"]
    },
    "technicalAnalysis": {
      "technologyStack": ["Technologie 1", "Technologie 2"],
      "technicalRisks": ["Risque technique 1", "Risque technique 2"],
      "developmentTimeline": "Planning de d√©veloppement",
      "scalabilityAssessment": "√âvaluation de la scalabilit√©"
    },
    "financialProjections": {
      "revenueProjection": "Projections de revenus d√©taill√©es",
      "costStructure": "Structure des co√ªts",
      "breakEvenAnalysis": "Analyse de seuil de rentabilit√©",
      "fundingRequirements": "Besoins de financement"
    },
    "teamAssessment": {
      "keyPersonnel": ["Personnel cl√© 1", "Personnel cl√© 2"],
      "skillsGaps": ["Lacune 1", "Lacune 2"],
      "organizationalStructure": "Structure organisationnelle"
    }
  }
}`
      })
      .where(eq(analysis_steps.name, 'Vue d\'ensemble du projet'));

    console.log('‚úÖ Prompt "Vue d\'ensemble du projet" mis √† jour');

    // Prompt 3: R√©cup√©ration des documents manquants
    await db
      .update(analysis_steps)
      .set({
        prompt: `Identifiez et listez tous les documents manquants qui seraient n√©cessaires pour compl√©ter l'analyse de ce projet d'investissement immobilier. Organisez-les par cat√©gorie (financier, juridique, technique, march√©) et pr√©cisez l'importance de chaque document pour la prise de d√©cision.

IMPORTANT: Structurez votre liste via POST sur l'endpoint /api/workflow/missing-documents/{projectUniqueId} avec le format suivant :

{
  "projectUniqueId": "{projectUniqueId}",
  "missingDocuments": [
    {
      "name": "Nom pr√©cis du document",
      "whyMissing": "Explication de pourquoi ce document est n√©cessaire",
      "priority": "high|medium|low",
      "category": "legal|financial|technical|business|regulatory",
      "impactOnProject": "Impact de l'absence de ce document sur le projet",
      "suggestedSources": ["Source sugg√©r√©e 1", "Source sugg√©r√©e 2"]
    }
  ]
}`
      })
      .where(eq(analysis_steps.name, 'R√©cup√©ration des documents manquants'));

    console.log('‚úÖ Prompt "R√©cup√©ration des documents manquants" mis √† jour');

    // Prompt 4: Points de vigilance
    await db
      .update(analysis_steps)
      .set({
        prompt: `Analysez le projet d'investissement immobilier et identifiez tous les points de vigilance critiques qui pourraient compromettre l'obtention du financement. Organisez votre analyse en cat√©gories : 1) Risques financiers (ratio d'endettement, capacit√© de remboursement, apport personnel), 2) Risques juridiques (servitudes, litiges, conformit√©), 3) Risques techniques (√©tat du bien, travaux n√©cessaires, diagnostics), 4) Risques de march√© (localisation, √©volution des prix, demande locative). Pour chaque point, √©valuez le niveau de criticit√© et proposez des solutions ou documents compl√©mentaires.

IMPORTANT: Structurez vos points de vigilance via POST sur l'endpoint /api/workflow/vigilance-points/{projectUniqueId} avec le format suivant :

{
  "projectUniqueId": "{projectUniqueId}",
  "vigilancePoints": [
    {
      "title": "Titre concis du point de vigilance",
      "whyVigilance": "Explication d√©taill√©e de la raison de vigilance",
      "riskLevel": "high|medium|low",
      "category": "financial|technical|legal|market|operational|regulatory",
      "potentialImpact": "Impact potentiel sur le projet",
      "mitigationStrategies": ["Strat√©gie d'att√©nuation 1", "Strat√©gie d'att√©nuation 2"],
      "monitoringRecommendations": ["Recommandation de suivi 1", "Recommandation de suivi 2"]
    }
  ]
}`
      })
      .where(eq(analysis_steps.name, 'Points de vigilance'));

    console.log('‚úÖ Prompt "Points de vigilance" mis √† jour');

    // Laisser le prompt "R√©daction d'un message" inchang√© (√©tape 5)
    console.log('‚ÑπÔ∏è Prompt "R√©daction d\'un message" conserv√© tel quel (format texte libre)');

    console.log('üéâ Mise √† jour des prompts termin√©e avec succ√®s !');
  } catch (error) {
    console.error('‚ùå Erreur lors de la mise √† jour des prompts:', error);
    throw error;
  }
};

// Ex√©cution du script si appel√© directement
if (require.main === module) {
  updateExistingPrompts()
    .then(() => {
      console.log('Migration termin√©e');
      process.exit(0);
    })
    .catch((error) => {
      console.error('Migration √©chou√©e:', error);
      process.exit(1);
    });
} 